{"version":3,"sources":["components/NavMenu/navmenu.jsx","components/HomePage/homepage.jsx","components/Skills/skills.jsx","components/Projects/projects.jsx","App.js","serviceWorker.js","index.js"],"names":["Nav","props","state","menuOpen","this","setState","isOpen","width","onStateChange","handleStateChange","disableAutoFocus","onClick","closeMenu","className","to","React","Component","Home","col","steps","loop","Infinity","wrapper","href","rel","target","Skills","Projects","activeTab","shadow","style","height","expand","color","background","fontSize","fontWeight","lineHeight","border","colored","onChange","tabId","ripple","toggleCategories","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f59e07b7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { bubble as Menu } from \"react-burger-menu\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./navmenu.css\";\r\n\r\nclass Nav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      menuOpen: false\r\n    };\r\n  }\r\n\r\n  handleStateChange(state) {\r\n    this.setState({ menuOpen: state.isOpen });\r\n  }\r\n\r\n  closeMenu() {\r\n    this.setState({ menuOpen: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Menu\r\n        width={\"200px\"}\r\n        isOpen={this.state.menuOpen}\r\n        onStateChange={state => this.handleStateChange(state)}\r\n        disableAutoFocus\r\n      >\r\n        <Link onClick={() => this.closeMenu()} className=\"menu-item\" to=\"/\">\r\n          <i className=\"fa fa-home\" /> Home\r\n        </Link>\r\n\r\n        <Link\r\n          onClick={() => this.closeMenu()}\r\n          className=\"menu-item\"\r\n          to=\"/skills\"\r\n        >\r\n          <i className=\"fa fa-graduation-cap\" /> Stack\r\n        </Link>\r\n\r\n        <Link\r\n          onClick={() => this.closeMenu()}\r\n          className=\"menu-item\"\r\n          to=\"/projects\"\r\n        >\r\n          <i className=\"fa fa-trophy\" /> Projects\r\n        </Link>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport { Grid, Cell } from \"react-mdl\";\r\nimport Typical from \"react-typical\";\r\n\r\nimport \"./homepage.css\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home-body\">\r\n      <Grid className=\"home__grid\">\r\n        <Cell col={12}>\r\n          <div className=\"home__content\">\r\n            <h1 className=\"home__title\">Alexander Sevruk</h1>\r\n            <h2 className=\"home__title2\">\r\n              Front-end developer / Graphic designer\r\n            </h2>\r\n\r\n            <p className=\"home__text\">\r\n              <Typical\r\n                steps={[\"React\", 2000, \"Front-end\", 2000, \"Layout\", 2000]}\r\n                loop={Infinity}\r\n                wrapper=\"b\"\r\n              />\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"links\">\r\n            {/*github*/}\r\n            <a\r\n              href=\"https://github.com/AlexanderSevruk\"\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              <i className=\"fa fa-github-square\" />\r\n            </a>\r\n            {/*telegram*/}\r\n            <a\r\n              href=\"https://t.me/AlexanderSevruk\"\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              <i className=\"fa fa-telegram  \" />\r\n            </a>\r\n            {/*mail*/}\r\n            <a\r\n              href=\"mailto: alexandersevruk96@gmail.com\"\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              <i className=\"fa fa-envelope\" />\r\n            </a>\r\n          </div>\r\n        </Cell>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Grid, Cell } from \"react-mdl\";\r\nimport \"./skills.css\";\r\n\r\nconst Skills = () => {\r\n  return (\r\n    <div>\r\n      <Grid className=\"skills--grid\">\r\n        <Cell className=\"skill__cell\" col={4}>\r\n          {\" \"}\r\n          <ul className=\"skill__col\">\r\n            <li className=\"skill__list\">\r\n              <h6 className=\"skill__title\">HTML</h6>{\" \"}\r\n              <p className=\"skill__description\">\r\n                Освоил язык гипертекстовой разметки текста. Научился делать\r\n                разметку веб-страницы, применять теги и атрибуты на сайте.\r\n              </p>\r\n            </li>\r\n            <li className=\"skill__list\">\r\n              <h6 className=\"skill__title\"> CSS </h6>{\" \"}\r\n              <p className=\"skill__description\">\r\n                Изучил таблицу каскадных стилей CSS. Научился стилизовать\r\n                элементы на сайте с помощью селекторов, атрибутов и классов.\r\n              </p>\r\n            </li>\r\n            <li className=\"skill__list\">\r\n              <h6 className=\"skill__title\"> BOOTSTRAP</h6>{\" \"}\r\n              <p className=\"skill__description\">\r\n                Понимание фреймворка css - Bootstrap. Применение готовой сетки\r\n                Bootstrap. Работа с гридами в целом. Добавление элементов UI в\r\n                проекты. Использование похожих библиотек: Reactmdl, Material-UI,\r\n                React-Bootstrap.\r\n              </p>\r\n            </li>\r\n            <li className=\"skill__list\">\r\n              <h6 className=\"skill__title\">JAVASCRIPT </h6>{\" \"}\r\n              <p className=\"skill__description\">\r\n                Ориентируюсь в ванильном JavaScript. Понимание и работа с такими\r\n                вещами как: Циклы, if else и switch statement, тернарные\r\n                операторы, promise и асинхронные функции, массивами,\r\n                теоретическое понимание принципов ООП и паттернов.\r\n              </p>\r\n            </li>\r\n          </ul>\r\n        </Cell>\r\n        <Cell className=\"skill__cell\" col={4}>\r\n          {\" \"}\r\n          <ul className=\"skill__col\">\r\n            <li className=\"skill__list\">\r\n              <h6 className=\"skill__title\">\r\n                ГРАФИЧЕСКИЕ И ВЕКТОРНЫЕ РЕДАКТОРЫ\r\n              </h6>{\" \"}\r\n              <p className=\"skill__description\">\r\n                Работа с Adobe Photoshop, Adobe Illustrator. Хорошо ориентируюсь\r\n                в программах. Создание логотипов, баннеров, оформления для\r\n                медиа-ресурсов. Нарезка макета, экспорт векторной графики.\r\n              </p>\r\n            </li>\r\n            <li className=\"skill__list\">\r\n              <h6 className=\"skill__title\">REACT</h6>{\" \"}\r\n              <p className=\"skill__description\">\r\n                Работа с библиотекой React Js. Создание классовых ,\r\n                функциональных компонентов. Понимание life cycle методов и state\r\n                менеджмента. Использование Context API, React router и\r\n                подключение библиотек для UI: Reactmdl, Material UI и т.д.\r\n              </p>\r\n            </li>\r\n            <li className=\"skill__list\">\r\n              <h6 className=\"skill__title\"> GIT</h6>{\" \"}\r\n              <p className=\"skill__description\">\r\n                Работа с удаленными репозиторями. Пуш, пул реквесты, коммиты,\r\n                создание веток и т.д.\r\n              </p>\r\n            </li>\r\n            <li className=\"skill__list\">\r\n              <h6 className=\"skill__title\"> МЕТОДОЛОГИЯ БЕМ </h6>{\" \"}\r\n              <p className=\"skill__description\">\r\n                Стараюсь применять в верстке методологию - БЕМ(именование\r\n                классов) для более читаемого кода.\r\n              </p>\r\n            </li>\r\n          </ul>\r\n        </Cell>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Tabs,\r\n  Tab,\r\n  Grid,\r\n  Cell,\r\n  Card,\r\n  CardTitle,\r\n  CardActions,\r\n  Button,\r\n  CardText\r\n} from \"react-mdl\";\r\nimport \"./projects.css\";\r\n\r\nclass Projects extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { activeTab: 0 };\r\n  }\r\n\r\n  toggleCategories() {\r\n    if (this.state.activeTab === 0) {\r\n      return (\r\n        <Grid>\r\n          <Cell col={4}>\r\n            <Card\r\n              className=\"card\"\r\n              shadow={5}\r\n              style={{ width: \"300px\", height: \"300px\" }}\r\n            >\r\n              <CardTitle\r\n                expand\r\n                style={{\r\n                  color: \"whitesmoke\",\r\n                  background:\r\n                    \"url(http://i.piccy.info/i9/6d5a32a6cb295d18a82203df55efc1f1/1572791153/191192/1345661/Recipebook.jpg) center / cover \"\r\n                }}\r\n              ></CardTitle>\r\n              <CardText\r\n                style={{\r\n                  fontSize: \"1.2rem\",\r\n                  fontWeight: \"bold\",\r\n                  lineHeight: \"1.4\"\r\n                }}\r\n              >\r\n                Приложение которое позволяет искать, создовать и хранить\r\n                рецепты.\r\n              </CardText>\r\n              <CardActions border>\r\n                <Button\r\n                  colored\r\n                  href=\"https://github.com/AlexanderSevruk/recipebook/tree/master\"\r\n                  target=\"_blank\"\r\n                >\r\n                  github\r\n                </Button>\r\n                <Button\r\n                  className=\"button\"\r\n                  colored\r\n                  href=\"https://alexandersevruk.github.io/recipebook/\"\r\n                  target=\"_blank\"\r\n                >\r\n                  live demo\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n\r\n            <Card\r\n              className=\"card\"\r\n              shadow={5}\r\n              style={{ width: \"300px\", height: \"300px\" }}\r\n            >\r\n              <CardTitle\r\n                expand\r\n                style={{\r\n                  color: \"whitesmoke\",\r\n                  background:\r\n                    \"url(http://i.piccy.info/i9/19a75071669c502b5a318029b4b97f6a/1574095336/54402/1345661/fesco_layout.jpg) top / cover \"\r\n                }}\r\n              ></CardTitle>\r\n              <CardText\r\n                style={{\r\n                  fontSize: \"1.2rem\",\r\n                  fontWeight: \"bold\",\r\n                  lineHeight: \"1.4\"\r\n                }}\r\n              >\r\n                Верстка сайта с использованием сетки bootstrap4. Сайт\r\n                адаптивный.\r\n              </CardText>\r\n              <CardActions border>\r\n                <Button\r\n                  colored\r\n                  href=\"https://github.com/AlexanderSevruk/alexandersevruk.github.io\"\r\n                  target=\"_blank\"\r\n                >\r\n                  github\r\n                </Button>\r\n                <Button\r\n                  className=\"button\"\r\n                  colored\r\n                  href=\"https://alexandersevruk.github.io/\"\r\n                  target=\"_blank\"\r\n                >\r\n                  live demo\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Cell>\r\n        </Grid>\r\n      );\r\n    } else if (this.state.activeTab === 1) {\r\n      return (\r\n        <Grid>\r\n          <Cell col={4}>\r\n            <Card\r\n              className=\"card\"\r\n              shadow={5}\r\n              style={{ width: \"300px\", height: \"300px\" }}\r\n            >\r\n              <CardTitle\r\n                expand\r\n                style={{\r\n                  color: \"#fff\",\r\n                  background:\r\n                    \"url(http://i.piccy.info/i9/dbf475dc4643228b2993429cec588db5/1572791522/61085/1345661/Slime_crates_behance.jpg) center / cover \"\r\n                }}\r\n              ></CardTitle>\r\n              <CardText\r\n                style={{\r\n                  fontSize: \"1.2rem\",\r\n                  fontWeight: \"bold\",\r\n                  lineHeight: \"1.4\"\r\n                }}\r\n              >\r\n                Сделал несколько логотипов на 99designs. Большинство из них вы\r\n                можете найти в профиле ниже\r\n              </CardText>\r\n              <CardActions border>\r\n                <Button\r\n                  href=\"https://99designs.com/profiles/3119049?category=&order=featured#filter-controls\"\r\n                  colored\r\n                  target=\"_blank\"\r\n                >\r\n                  Profile\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n\r\n            <Card\r\n              className=\"card\"\r\n              shadow={5}\r\n              style={{ width: \"300px\", height: \"300px\" }}\r\n            >\r\n              <CardTitle\r\n                expand\r\n                style={{\r\n                  color: \"#fff\",\r\n                  background:\r\n                    \"url(http://i.piccy.info/i9/411df9f2a4ea71aa79ee569b7fb30a3c/1572792248/109476/1345661/offline.jpg) center / cover \"\r\n                }}\r\n              ></CardTitle>\r\n              <CardText\r\n                style={{\r\n                  fontSize: \"1.2rem\",\r\n                  fontWeight: \"bold\",\r\n                  lineHeight: \"1.4\"\r\n                }}\r\n              >\r\n                Оформление для медиаресурсов.\r\n              </CardText>\r\n              <CardActions border>\r\n                <Button\r\n                  href=\"https://www.behance.net/gallery/85789201/twitch-templates\"\r\n                  target=\"_blank\"\r\n                  colored\r\n                >\r\n                  Behance\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Cell>\r\n        </Grid>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"category-tabs\">\r\n        <Tabs\r\n          activeTab={this.state.activeTab}\r\n          onChange={tabId => this.setState({ activeTab: tabId })}\r\n          ripple\r\n        >\r\n          <Tab>\r\n            <span className=\"tab-text\">Programming</span>\r\n          </Tab>\r\n          <Tab>\r\n            <span className=\"tab-text\">Design</span>\r\n          </Tab>\r\n        </Tabs>\r\n\r\n        <div className=\"content\">{this.toggleCategories()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import React from \"react\";\nimport Nav from \"./components/NavMenu/navmenu\";\nimport \"./App.css\";\nimport Home from \"./components/HomePage/homepage\";\nimport Skills from \"./components/Skills/skills\";\nimport Projects from \"./components/Projects/projects\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/skills\" component={Skills} />\n          <Route path=\"/projects\" component={Projects} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"react-mdl/extra/material.css\";\nimport \"react-mdl/extra/material.js\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}